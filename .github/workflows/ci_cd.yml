name: CI/CD

on:
  push:
    tags:
      - v*

jobs:
  flutter_test:
    name: Running tests
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '12.x'
          cache: 'gradle'
      
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.7.7'
          channel: 'stable'
          cache: true
      
    
      - name: Run flutter doctor
        run: flutter doctor -v

      - name: Get dependencies
        run: flutter pub get
 
      - name: Create .env file
        run: echo "" >> .env
      
      - name: Run analyze
        run: flutter analyze

      - name: Check formatting files folder lib/
        run: flutter format --dry-run --set-exit-if-changed lib/
      
      - name: Check formatting files folder test/
        run: flutter format --dry-run --set-exit-if-changed test/

      - name: Check test coverage
        run: flutter test --coverage

      - name: Generate file with test coverage
        run: flutter test --machine > test-result.json

      - name: Test report
        uses: dorny/test-reporter@v1
        with:
          name: Flutter test results
          path: test-result.json
          reporter: flutter-json
      
      - uses: VeryGoodOpenSource/very_good_coverage@v2
        with:
          min_coverage: 70

  build_android:
    name: Build Android ${{ matrix.target }}
    needs: [flutter_test]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: 
        target: ['apk', 'appbundle']
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '12.x'
          cache: 'gradle'
      
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.7.7'
          channel: 'stable'
          cache: true
    
      - name: Run flutter doctor
        run: flutter doctor -v

      - name: Get dependencies
        run: flutter pub get

      - name: Create .env file and set environments variables
        run: |
          echo "HOST_API=${{ secrets.HOST_API }}" >> .env
          echo "PUBLIC_KEY=${{ secrets.PUBLIC_KEY }}" >> .env
          echo "PRIVATE_KEY=${{ secrets.PRIVATE_KEY }}" >> .env

      - name: Build ${{ matrix.target }} release 
        run: flutter build ${{ matrix.target }}

      - name: Upload ${{ matrix.target }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.target }}
          path: build/app/outputs/${{ matrix.target }}/release/app-release.${{ matrix.target }}

  build_ios:
    name: Build iOS
    needs: [flutter_test]
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
      
      - name: Create .env file
        run: |
          cat > .env <<EOF
          HOST_API=${{ secrets.HOST_API }}
          PUBLIC_KEY=${{ secrets.PUBLIC_KEY }}
          PRIVATE_KEY=${{ secrets.PRIVATE_KEY }}
          EOF

      - name: Get dependencies
        run: flutter pub get

      - name: Start release ios
        run: flutter build ios --release --no-codesign


