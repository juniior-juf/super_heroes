// Mocks generated by Mockito 5.3.2 from annotations
// in super_heroes/test/src/domain/use_cases/get_characters/get_characters_use_case_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:super_heroes/src/data/models/response_characters_data_model.dart'
    as _i4;
import 'package:super_heroes/src/domain/repositories/character_repository.dart'
    as _i2;
import 'package:super_heroes/src/domain/use_cases/get_characters/params/character_params.dart'
    as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [CharactersRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockCharactersRepository extends _i1.Mock
    implements _i2.CharactersRepository {
  MockCharactersRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.ResponseCharactersDataModel?> getCharacters(
          _i5.CharacterParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCharacters,
          [params],
        ),
        returnValue: _i3.Future<_i4.ResponseCharactersDataModel?>.value(),
      ) as _i3.Future<_i4.ResponseCharactersDataModel?>);
}
